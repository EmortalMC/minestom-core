plugins {
    id("java-library")
    id("maven-publish")

    id("com.github.johnrengelman.shadow") version "7.1.2"
}

group "dev.emortal.minestom.core"
version "1.0-SNAPSHOT"

repositories {
    mavenCentral()
    mavenLocal() // In maven local: openmatch.frontend
    maven { url = "https://repo.emortal.dev/snapshots" }
    maven { url = "https://repo.emortal.dev/releases" }
    maven { url = "https://jitpack.io" }
}

dependencies {
    api("dev.emortal.api:agones-sdk:1.0.5")
    api("dev.emortal.api:grpc-sdk:bb514c1")
    api("io.kubernetes:client-java:16.0.2")
    implementation("com.rabbitmq:amqp-client:5.16.0")

    api("com.github.Minestom.Minestom:Minestom:24cc458659")
    implementation('net.kyori:adventure-text-minimessage:4.12.0')
//    api("net.minestom.server:Minestom:1.0") // local

    testImplementation("org.junit.jupiter:junit-jupiter-api:5.9.0")
    testRuntimeOnly("org.junit.jupiter:junit-jupiter-engine:5.9.0")
}

test {
    useJUnitPlatform()
}

shadowJar {
    mergeServiceFiles()
}

publishing {
    repositories {
        maven {
            name = "development"
            url = uri("https://repo.emortal.dev/snapshots")
            credentials {
                username = System.getenv("MAVEN_USERNAME")
                password = System.getenv("MAVEN_SECRET")
            }
        }
        maven {
            name = "release"
            url = uri("https://repo.emortal.dev/releases")
            credentials {
                username = System.getenv("MAVEN_USERNAME")
                password = System.getenv("MAVEN_SECRET")
            }
        }
    }

    publications {
        maven(MavenPublication) {
            groupId = "dev.emortal.minestom"
            artifactId = "core"

            def commitHash = System.getenv("COMMIT_HASH_SHORT")
            def releaseVersion = System.getenv("RELEASE_VERSION")
            version = commitHash ?: releaseVersion ?: "local"

            from components.java
        }
    }
}